<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="customAccessDenied"
		class="org.ict.security.CustomAccessDeniedHandler" />
	<bean id="customLoginSuccess"
		class="org.ict.security.CustomLoginSuccessHandler" />
	<bean id="bcryptPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
	<bean id="customUserDetailsService"
		class="org.ict.security.CustomUserDetailsService"></bean>

	<!-- http 영역 -->
	<!-- <security:http auto-config="true" use-expressions="true"> -->
	<security:http>

		<!-- /secu/all 접속시 모둔 유저에게 접근 허용 -->
		<security:intercept-url pattern="/secu/all"
			access="permitAll" />

		<!-- /secu/member는 Member에게만 접근 허용 -->
		<!-- <security:intercept-url pattern="/secu/member" access="hasRole('ROLE_MEMBER')"/> -->

		<!-- /secu/admin은 admin에게만 접근 허용 -->
		<!-- <security:intercept-url pattern="/secu/admin" access="hasRole('ROLE_ADMIN')"/> -->

		<security:form-login login-page="/customLogin"
			authentication-success-handler-ref="customLoginSuccess" />

		<!-- <security:access-denied-handler error-page="/accessError"/> -->		<!-- 에러가 터지면 컨트롤러 이 주소로 보내라 -->
		<security:access-denied-handler
			ref="customAccessDenied" />	<!-- 위에 bean에 생성한 customAccessDenied -->

		<security:logout logout-url="/customLogout"
			invalidate-session="true" delete-cookies="remember-me, JSESSIONID" />

		<security:remember-me
			data-source-ref="dataSource" token-validity-seconds="604800" />

	</security:http>

	<!-- 인증영역 -->
	<security:authentication-manager>

		<security:authentication-provider
			user-service-ref="customUserDetailsService">
			<!-- <security:user-service> <security:user name="member" password="{noop}member" 
				authorities="ROLE_MEMBER"/> <security:user name="admin" password="{noop}admin" 
				authorities="ROLE_MEMBER,ROLE_ADMIN"/> </security:user-service> -->
			<!-- <security:jdbc-user-service data-source-ref="dataSource"/> -->	<!-- DB와 연동 -->

			<security:password-encoder
				ref="bcryptPasswordEncoder" />
		</security:authentication-provider>

	</security:authentication-manager>

</beans>
