<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.rg/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.ict.mapper.MemberMapper">
	
	<resultMap type="org.ict.domain.MemberVO" id="memberMap">
		<!-- JOIN구문 실행히 매칭 기준 컬럼을 id태그에 먼저 설정합니다. -->
		<id property="userid" column="userid" />
		<result property="userid" column="userid" />
		<result property="userpw" column="userpw" />
		<result property="userName" column="username" />
		<result property="regDate" column="regdate" />
		<result property="updateDate" column="updatedate" />
		<!-- 클래스 내부에 List<자료형> 을 멤버변수로 가지면
		아래와 같이 collection태그로 설정합니다. -->
		<collection property="authList" resultMap="authMap">
		</collection>
	</resultMap>

	<!-- collection 내부의 resultMap에 들어간 authMap설정 -->
	<resultMap type="org.ict.domain.AuthVO" id="authMap">
		<!-- AuthVO 내부에 있던 멤버변수들을 여기 적어줍니다. -->
		<result property="userid" column="userid" />
		<result property="auth" column="auth" />		
	</resultMap>

	<select id="read" resultMap="memberMap">
		SELECT
			m.userid, userpw, username, enabled, 
			regdate, updatedate, a.auth
		FROM
			member_tbl m LEFT OUTER JOIN member_auth a
		ON
			m.userid = a.userid
		WHERE
			m.userid = #{userid}
	</select>

	<insert id="insertMemberTbl">
		INSERT INTO MEMBER_TBL(userid, userpw, username) 
			VALUES
		(#{userid}, #{userpw}, #{userName})
	</insert>
	
	
	<update id="insertMemberAuth">
		INSERT ALL
		<foreach collection="authList" item="item" separator=" ">
			INTO MEMBER_AUTH(userid, auth) 
				VALUES
			(#{item.userid}, #{item.auth})
		</foreach>
		SELECT *
    		FROM DUAL
	</update>

</mapper>